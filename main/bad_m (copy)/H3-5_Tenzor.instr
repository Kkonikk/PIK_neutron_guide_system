/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: PIK H3 beamtube 
*
* %Identification
* Written by: P. Konik
* Date: 16.02.17
* Edited by: K.Pavlov
* Date: 07.09.2018
* Origin: PNPI
* Release: McStas 2.4.1
* Version: 2.0
*
* H3_4_? Neutron guide for Tenzor instrument at PIK reactor beamtube H3 facing cold neutron source. Handles additionaly the thermal regime of CNS and no CNS at all situation.
*
* %Parameters
* guide_start_width: [m] Initial width of guide (where to focus neutrons from source)
* guide_start_height: [m]  Initial height of guide (where to focus neutrons from source)
* source_lambda_min: [AA] Minimal wavelength to create
* source_lambda_max: [AA] Maximal wavelength to create
* cold_regime: [num] 1 corresponds to normal operation, 0 corresponds to thermal regime, -1 corresponds to no container situation
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT H34Tenzor ()

DECLARE
%{
double cold_regime=1, m_out=2.0, R_curv=750, n_chan=1, m=1.0, Lcol1 = 4.0, Lcol2 = 20.0, lambda = 5.0;
//[Cold source parameters
double source_height = 0.2, source_width = 0.12;
double source_I1 = 5.38e12, source_I2= 2.50e12, source_I3 = 9.51e12;
double source_T1 = 204.6, source_T2 = 73.9; source_T3 = 23.9;
double source_lambda_min, source_lambda_max;

//Thermal regime parameters
double source_thermal_T1 = 312.2;
double source_thermal_I1 = 2.25e13;

//No contaiber parameters
double source_no_T1 = 306.4;
double source_no_I1 = 7.05e12; 

//Distance to neutron guides
double guide_start_dist = 1.74;

//Guide parameters
double guide_start_width = 0.05, guide_start_height = 0.2;
double guide_sec_width = 0.05, guide_sec_height = 0.05;
double guide_width = 0.05, guide_height = 0.05;

//rotation of one guide element
double rot;

double selector_nu;
%}

INITIALIZE
%{
//thermal regime of CNS
if (cold_regime==0){
	source_T1 = source_thermal_T1;
	source_I1 = source_thermal_I1;
	source_I2 = 0;
	source_I3 = 0;};

//no container presented
if (cold_regime==-1){
	source_T1 = source_no_T1;
	source_I1 = source_no_I1;
	source_I2 = 0;
	source_I3 = 0;};

//handling rotation

rot = 1/R_curv*RAD2DEG;
//rot = 0;

//source_lambda_min = 0.8 * lambda;
//source_lambda_max = 1.2 * lambda;
source_lambda_min = 0.1;
source_lambda_max = 25.0;

selector_nu = 3956*48.3*DEG2RAD/2/PI/lambda/0.25;	
%}

TRACE

COMPONENT Origin = Progress_bar()
  AT (0,0,0) ABSOLUTE


COMPONENT H3 = Source_gen(
    dist = guide_start_dist, focus_xw = guide_start_width,
    focus_yh = guide_start_height, I1 = source_I1, yheight = source_height,
    xwidth = source_width, T1 = source_T1, Lmin = source_lambda_min,
    Lmax = source_lambda_max, T2 = source_T2, I2 = source_I2, T3 = source_T3,
    I3 = source_I3)
  AT (0, 0, 0) RELATIVE Origin

COMPONENT Channel = Guide_gravity(
    w1 = 0.12, h1 = 0.2, w2 = 0.32, l=0.967, m=0)
  AT (0, 0, 0.001) RELATIVE Origin

COMPONENT Guide_start_arm = Arm(
    )
  AT (0, 0, guide_start_dist) RELATIVE Origin

//first 1 straight meter m=2

COMPONENT Guide_metal = Guide_gravity(
    w1 = 0.05, h1 = 0.05, l = 6, mright=m_out, mleft=m_out, mtop=m_out, mbottom=m_out)
  AT (0, 0, 0) RELATIVE Guide_start_arm

// curved part bender 19m m=1, outer_m=2, 12 channels

COMPONENT Guide_curved = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = 1, mright=m_out,mleft=m, mtop=m,mbottom=m,nslit=n_chan)
  AT (0, 0, 6) RELATIVE PREVIOUS
  ROTATED (0, rot, 0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, 1) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

//straight part 34 m

COMPONENT Guide_straight = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = 6.0, mright=m, mleft=m, mtop=m, mbottom=m)
  AT (0, 0, 1) RELATIVE PREVIOUS

COMPONENT Instrument_Arm = Arm(
    )
  AT (0, 0, 6.01) RELATIVE PREVIOUS

	COMPONENT Mon_lam_ge = Monitor_nD(
	    xwidth = 0.06, yheight = 0.06, options = "lambda bins = 100 limits = [0 25] per cm2", restore_neutron = 1, filename = "H3-4_Tensor")
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Mon_dx_ge = Monitor_nD(
	    xwidth = 0.06, yheight = 0.06, options = "dx bins = 60 limits = [-3 3] per cm2", restore_neutron = 1, filename = "H3-4_Tensor")
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Mon_dy_ge = Monitor_nD(
	    xwidth = 0.06, yheight = 0.06, options = "dy bins = 60 limits = [-3 3] per cm2", restore_neutron = 1, filename = "H3-4_Tensor")
	  AT (0, 0, 0) RELATIVE PREVIOUS
/*
   COMPONENT Selector = V_selector(
       xwidth = guide_width, yheight = guide_height, zdepth = 0.30,
       radius = 0.12, alpha = 48.3, length = 0.25, d = 4e-4,
       nu = selector_nu, nslit = 72)
     AT (0, 0, 0.35) RELATIVE Instrument_Arm

COMPONENT Coll_Arm = Arm(
    )
  AT (0, 0, 0.51) RELATIVE Instrument_Arm
/*
COMPONENT Slit1 = Slit(
    xwidth = 0.02, yheight = 0.02)
  AT (0, 0, 0) RELATIVE Coll_Arm

COMPONENT Slit2 = Slit(
    xwidth = 0.02, yheight = 0.02)
  AT (0, 0, 16.0) RELATIVE Coll_Arm
*/
/*
	COMPONENT Mon_dx_sample1 = Monitor_nD(
	    xwidth = 0.06, yheight = 0.06, options = "dx bins = 100 limits = [-2 2] per cm2", restore_neutron = 1)
	  AT (0, 0, Lcol1) RELATIVE Coll_Arm

	COMPONENT Mon_lam_sample = Monitor_nD(
	    xwidth = 0.03, yheight = 0.03, options = "lambda bins = 70 limits = [4.3 5.7] per cm2", restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS
/*
	COMPONENT Mon_dx_sample2 = Monitor_nD(
	    xwidth = 0.03, yheight = 0.03, options = "dx bins = 100 limits = [-2 2]", restore_neutron = 1)
	  AT (0, 0, Lcol2) RELATIVE Coll_Arm


SPLIT COMPONENT Sample_spheres = SANSSpheres(
	R = 10000, dR= 0, Concentration = 0.01, DeltaRho = 1.0e-14, AbsorptionCrosssection = 0.0, 
	xwidth = 0.02, yheight = 0.02, zdepth = 0.01, SampleToDetectorDistance = 16.0,
	DetectorRadius = 0.7)
  AT (0, 0, 0.011) RELATIVE Slit2

	COMPONENT QMonitor = SANSQMonitor(
	  RadiusDetector = 0.7,
  	  DistanceFromSample = 16.0,
	  LambdaMin = 0.9*lambda,
	  Lambda0 = lambda,
	  NumberOfBins = 300,
	  restore_neutron = 1)
	AT (0, 0, 16.0) RELATIVE Sample_spheres

	COMPONENT Detector = Monitor_nD(
	    options = "x limits = [-0.7 0.7] bins = 300 y limits = [-0.7 0.7] bins = 300", xwidth = 1.4,
	    yheight = 1.4, restore_neutron = 1, filename="Detector2D.dat")
	  AT (0, 0, 0) RELATIVE PREVIOUS
*/
FINALLY
%{
%}

END




















