/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: PIK H3 beamtube 
*
* %Identification
* Written by: K.Pavlov
* Date: 07.09.18
* Origin: PNPI
* Release: McStas 2.3
* Version: 2.0
*
* PIK reactor beamtube H3 facing cold neutron source. Handles additionaly the thermal regime of CNS and no CNS at all situation.
*
* %Parameters
* guide_start_width: [m] Initial width of guide (where to focus neutrons from source)
* guide_start_height: [m]  Initial height of guide (where to focus neutrons from source)
* source_lambda_min: [AA] Minimal wavelength to create
* source_lambda_max: [AA] Maximal wavelength to create
* cold_regime: [num] 1 corresponds to normal operation, 0 corresponds to thermal regime, -1 corresponds to no container situation
*
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT generic_curved(lambda = 5.2, R_curv=500, l_bender=10, l_straight=20.7, n_chan=1, sample_width=0.01, sample_height=0.01, m_out=6, m_in=6, m_str_side = 6, m_top = 6)

DECLARE
%{
//rotation of one guide element
double rot,l_sect;
double RH=0, RV=-4, d_lattice_parameter=3.355;
%}

INITIALIZE
%{

//handling rotation
l_sect=l_bender/20;
rot = l_sect/R_curv*RAD2DEG;

	
%}

TRACE

%include "../main/H3_source.instr"

//curved part

COMPONENT Guide_curved = Guide_gravity(
    w1 = guide_start_width, h1 = guide_start_height, l = l_sect, mright=m_out, mleft=m_in, mtop=m_top,mbottom=m_top, nslit=n_chan,     R0=R0, 
    alpha=alpha)
  AT (0, 0, 0) RELATIVE Guide_start_arm

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS
//5
COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS
//10
COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS
//15
COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS

COMPONENT COPY(Guide_curved) = COPY(Guide_curved)()
  AT (0, 0, l_sect) RELATIVE PREVIOUS
  ROTATED (0,rot,0) RELATIVE PREVIOUS
//20

COMPONENT Guide_straight = Guide_gravity(
    w1 = guide_start_width, h1 = guide_start_height, l = l_straight, mright=m_str_side, mleft=m_str_side, mtop=m_top,mbottom=m_top, nslit=1,   R0=R0, 
    alpha=alpha)
  AT (0, 0, l_sect+0.001) RELATIVE PREVIOUS

/* ******************************* Monochromator  *************************************/    

COMPONENT mon_IN = Arm(
    )
  AT (0, 0, l_straight + 0.27) RELATIVE Guide_straight

COMPONENT mon_curv = Monochromator_curved(
    zwidth = 0.2, yheight = 0.01, NH = 1, NV = 30, 
    DM = d_lattice_parameter, mosaic = 30,
    RH = RH, RV = RV)
  AT (0, 0, 0) RELATIVE mon_IN
 ROTATED (0, -asin(lambda/2/d_lattice_parameter)*RAD2DEG, 0) RELATIVE mon_IN
EXTEND
%{
     if (!SCATTERED) ABSORB;
%}

COMPONENT mon_OUT = Arm(
    )
  AT (0, 0, 0) RELATIVE mon_IN
  ROTATED (0, -2*asin(lambda/2/d_lattice_parameter)*RAD2DEG, 0) RELATIVE mon_IN

COMPONENT Sample = Monitor_nD(
    xwidth=sample_width, 
    yheight=sample_height, 
    bins=100, 
    options="dx limits = [-0.5 0.5]")
	  AT (0, 0, 4.001) RELATIVE mon_OUT
/*
COMPONENT Sample = Monitor_nD(
    xwidth=0.2, 
    yheight=sample_height, 
    bins=100, 
    options="dx limits = [-0.5 0.5]")
	  AT (0, 0, 4) RELATIVE mon_OUT
*/
FINALLY
%{
%}

END
